import serial
from time import sleep
from colorama import Fore, Style

def uboot_control():
    print(f"{Fore.CYAN}[INFO] Accessing U-boot shell.")
    while True:
        if ser.in_waiting > 0:
            a = ser.readline().decode('ISO-8859-1').strip('\r\n')
            print(f"{Fore.GREEN}[DEBUG] Read line: {a}{Style.RESET_ALL}") 
            ser.write(b'x03' + b'\r\n')
            ser.write(b'x03' + b'\r\n')
            if 'Hit any key to stop autoboot' in a:
                ser.write(b'x03' + b'\r\n')
                print(f"{Fore.YELLOW}[ACTION] Sent command to stop autoboot. {a}{Style.RESET_ALL}")
                break

    while True:
        if ser.in_waiting > 0:
            a = ser.readline().decode('ISO-8859-1').strip('\r\n')
            if a == '9607C/9603C# ':
                print(f"{Fore.CYAN}[INFO] Got U-boot shell. {a}{Style.RESET_ALL}")
                set_bootargs()
                return 0
        sleep(0.1)

def set_bootargs():
    print(f"{Fore.YELLOW}[ACTION] Add init=/bin/sh to bootargs")
    sleep(2)

	#Profile1
    command = b'setenv bootargs console=ttyS0,115200 mtdparts=spinand:768K(boot),128K(env),128K(env2),10752K(config),5M(k0)ro,20M(r0)ro,5M(k1),20M(r1),8M(framework1),8M(framework2),48M(app),4K@0ro,5M@11776K(linux),20M@16896K(rootfs) root=31:5 init=/bin/sh;spi_nand read 0x83000000 0xb80000 0x500000;bootm 0x83000000'
    #Profile2
    #command = b'setenv bootargs console=ttyS0,115200 mtdparts=spinand:768K(boot),128K(env),128K(env2),10752K(config),5M(k0),20M(r0),5M(k1)ro,20M(r1)ro,8M(framework1),8M(framework2),48M(app),4K@0ro,5M@37376K(linux),20M@42496K(rootfs) root=31:7 init=/bin/sh;spi_nand read 0x83000000 0x2480000 0x500000;bootm 0x83000000'
    chunk_size = 10  
    for i in range(0, len(command), chunk_size):
        ser.write(command[i:i+chunk_size])
        sleep(0.05)

    ser.write(b'\r\r')
    sleep(10)

    while True:
        if ser.in_waiting > 0:
            a = ser.readline().decode('ISO-8859-1').strip('\r\n')
            print(f"{Fore.GREEN}[DEBUG] Read line in set_bootargs: {a}{Style.RESET_ALL}") 

            if a == '9607C/9603C# setenv bootargs console=ttyS0,115200 mtdparts=spinand:768K(boot),128K(env),128K(env2),10752K(config),5M(k0)ro,20M(r0)ro,5M(k1),20M(r1),8M(framework1),8M(framework2),48M(app),4K@0ro,5M@11776K(linux),20M@16896K(rootfs) root=31:5 init=/bin/sh;spi_nand read 0x83000000 0xb80000 0x500000;bootm 0x83000000':
                continue

            elif a == '9607C/9603C# ':
                print(f"{Fore.CYAN}[INFO] Added {a}{Style.RESET_ALL}")
                boot()
                return 0
        sleep(0.1)

def boot():
    print(f"{Fore.CYAN}[INFO] Booting into system shell...")
    while True:
        if ser.in_waiting > 0:
            a = ser.readline().decode('ISO-8859-1').strip('\r\n')
            print(f"{Fore.GREEN}[DEBUG] Read line in boot: {a}{Style.RESET_ALL}") 

            sleep(0.03)
            ser.write(b'\r')
            if a == '# ':
                print(f"{Fore.CYAN}[INFO] Got shell")
                return 0
        sleep(0.1)

COM_PORT = 'COM4' 
BAUD_RATES = 115200
ser = serial.Serial(COM_PORT, BAUD_RATES)

booted = False

print(f"{Fore.CYAN}[INFO] Waiting for Router boot....")

while not booted:
    if ser.in_waiting:
        print(f"{Fore.CYAN}[INFO] Boot confirmed.")
        uboot_control()
        break
    else:
        sleep(0.1) 

print(f"{Fore.CYAN}[INFO] Done! Access shell from screen or minicom. ")
